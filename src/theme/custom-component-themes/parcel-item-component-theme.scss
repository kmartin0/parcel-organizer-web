@use 'sass:map';
@use 'node_modules/@angular/material' as mat;
@use 'devices' as devices;

@mixin color($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  $primary: map.get($color-config, primary);
  $custom: map.get($color-config, custom);

  .parcel-item-component-container {
    @include mat.elevation(6);
    color: mat.get-color-from-palette($custom, pi-ordered-contrast);

    .title {
      color: mat.get-color-from-palette($custom, pi-title);
    }

    .divider {
      border-color: mat.get-color-from-palette($custom, pi-divider);
    }

    .action-icon:hover {
      color: mat.get-color-from-palette($custom, pi-action-hover);
    }

    .action-icon {
      color: mat.get-color-from-palette($custom, pi-action);
    }

    &.ordered {
      background-color: mat.get-color-from-palette($custom, pi-ordered);
    }

    &.sent {
      background-color: mat.get-color-from-palette($custom, pi-sent);
    }

    &.delivered {
      background-color: mat.get-color-from-palette($custom, pi-delivered);
    }
  }

}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);

  .parcel-item-component-container {
    .title {
      @include mat.typography-level($typography-config, title);
    }
  }

}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
