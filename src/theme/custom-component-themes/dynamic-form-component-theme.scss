@use 'sass:map';
@use 'node_modules/@angular/material' as mat;
@use 'devices' as devices;

@mixin color($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  $primary: map.get($color-config, primary);
  $secondary: map.get($color-config, accent);
  $custom-collection: map.get($color-config, custom);
  $warn: map.get($color-config, warn);

  .dynamic-form-component-container {

    label {
      color: mat.get-color-from-palette($primary);
    }

    .error {
      color: mat.get-color-from-palette($warn, default-contrast);
      background: mat.get-color-from-palette($warn);
    }

    option {
      background-color: mat.get-color-from-palette($custom-collection, surface);
      color: mat.get-color-from-palette($custom-collection, surface-contrast);
    }

    input[type=text], input[type=password], input[type=email], select {
      color: mat.get-color-from-palette($custom-collection, input);
      background-color: mat.get-color-from-palette($custom-collection, input-contrast);
    }

    ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: rgba(mat.get-color-from-palette($custom-collection, input), .5);
      opacity: 1; /* Firefox */
    }

    :-ms-input-placeholder { /* Internet Explorer 10-11 */
      color: rgba(mat.get-color-from-palette($custom-collection, input), .5);
    }

    ::-ms-input-placeholder { /* Microsoft Edge */
      color: rgba(mat.get-color-from-palette($custom-collection, input), .5);
    }

  }

}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);

  .dynamic-form-component-container {
    input[type=text], input[type=password], input[type=email], select {
      @include mat.typography-level($typography-config, input);
      height: 50px;
    }

    label {
      @include mat.typography-level($typography-config, body-1);
    }

    .error {
      @include mat.typography-level($typography-config, input);
    }

  }

}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
